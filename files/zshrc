# Display message if uncommitted files
script_path="${HOME}/.zshrc"
script_dir="$(dirname "$(realpath "${script_path}")")"
repo_dir="$(dirname "${script_dir}")"
if [[ $(cd "${repo_dir}" && git status --porcelain) ]]; then
  echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  echo "--> It seems that ${repo_dir} have uncommitted files."
  echo "--> Commited them! Don't be a lazy fucker."
  echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
fi

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"
export EDITOR="vim"
export DISABLE_UPDATE_PROMPT=true

ZSH_THEME="robbyrussell"

plugins=(
  git
  zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh

# path
export PATH=$HOME/.bin:$PATH

# alias
alias sz="source $HOME/.zshrc"
alias zc="$EDITOR $HOME/.zshrc"
alias gPR="simple-pr"
alias gcf="git commit --amend --no-edit"
alias gfu="git add . && git commit --amend --no-edit && git push --force-with-lease"

function vimgst () {
  g_st=($(git status --porcelain | awk '{print $2}'))
  index="${1:-1}"
  vim $g_st[index]
}

function cbgst () {
  g_st=($(git status --porcelain | awk '{print $2}'))
  index="${1:-1}"
  printf "%s" $g_st[index] | pbcopy
}

function urldecode () {
  echo -n "${1}" | python3 -c "import sys; from urllib.parse import unquote; print(unquote(sys.stdin.read()));"
}


# Git override
unalias gcm 2>/dev/null

function gcm () {
  master_rev=$(git rev-parse --verify master 2>/dev/null)
  if [ -z "${master_rev}" ]; then
    # master_rev is empty (i.e. master branch not present)
    git checkout main
  else
    git checkout master
  fi
}

# WSL clipboard hack
# https://github.com/Microsoft/WSL/issues/892#issuecomment-275873108
if grep -qE "(Microsoft|WSL)" /proc/version &> /dev/null ; then
  export DISPLAY=localhost:0.0
fi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# honeycomb observability development key
export HONEYCOMB_DEVELOPMENT_KEY=$(cat /Users/jacopo/.intercom_honeycomb_api_token | tr -d '\n')

# token with access to private intercom repositories
export INTERCOM_GITHUB_API_TOKEN=$(cat /Users/jacopo/.intercom_github_api_token | tr -d '\n')

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Use Hammer auth
alias auth='function(){eval $(hammer auth $@);}'

alias assume-role='function(){eval $(hammer auth $@);}'

# Use Interstack v2 for Pilot
export PILOT_USE_INTERSTACK_V2=true

# initialize pilot environment variables
eval $(pilot env)
if [ -e ~/.pilot/stack/.pilot-env ]; then
  source ~/.pilot/stack/.pilot-env
fi
